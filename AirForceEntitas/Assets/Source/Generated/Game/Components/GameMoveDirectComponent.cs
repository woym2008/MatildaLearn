//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MoveDirectComponent moveDirect { get { return (MoveDirectComponent)GetComponent(GameComponentsLookup.MoveDirect); } }
    public bool hasMoveDirect { get { return HasComponent(GameComponentsLookup.MoveDirect); } }

    public void AddMoveDirect(UnityEngine.Vector2 newDir) {
        var index = GameComponentsLookup.MoveDirect;
        var component = (MoveDirectComponent)CreateComponent(index, typeof(MoveDirectComponent));
        component.dir = newDir;
        AddComponent(index, component);
    }

    public void ReplaceMoveDirect(UnityEngine.Vector2 newDir) {
        var index = GameComponentsLookup.MoveDirect;
        var component = (MoveDirectComponent)CreateComponent(index, typeof(MoveDirectComponent));
        component.dir = newDir;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveDirect() {
        RemoveComponent(GameComponentsLookup.MoveDirect);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveDirect;

    public static Entitas.IMatcher<GameEntity> MoveDirect {
        get {
            if (_matcherMoveDirect == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveDirect);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveDirect = matcher;
            }

            return _matcherMoveDirect;
        }
    }
}
