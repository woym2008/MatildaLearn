//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity planeConfigEntity { get { return GetGroup(ConfigMatcher.PlaneConfig).GetSingleEntity(); } }
    public PlaneConfigComponent planeConfig { get { return planeConfigEntity.planeConfig; } }
    public bool hasPlaneConfig { get { return planeConfigEntity != null; } }

    public ConfigEntity SetPlaneConfig(int newPlaneBornTime, UnityEngine.Vector2 newBornPos, UnityEngine.Vector2 newStartPos, float newSpeed, float newBulletspeed) {
        if (hasPlaneConfig) {
            throw new Entitas.EntitasException("Could not set PlaneConfig!\n" + this + " already has an entity with PlaneConfigComponent!",
                "You should check if the context already has a planeConfigEntity before setting it or use context.ReplacePlaneConfig().");
        }
        var entity = CreateEntity();
        entity.AddPlaneConfig(newPlaneBornTime, newBornPos, newStartPos, newSpeed, newBulletspeed);
        return entity;
    }

    public void ReplacePlaneConfig(int newPlaneBornTime, UnityEngine.Vector2 newBornPos, UnityEngine.Vector2 newStartPos, float newSpeed, float newBulletspeed) {
        var entity = planeConfigEntity;
        if (entity == null) {
            entity = SetPlaneConfig(newPlaneBornTime, newBornPos, newStartPos, newSpeed, newBulletspeed);
        } else {
            entity.ReplacePlaneConfig(newPlaneBornTime, newBornPos, newStartPos, newSpeed, newBulletspeed);
        }
    }

    public void RemovePlaneConfig() {
        planeConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public PlaneConfigComponent planeConfig { get { return (PlaneConfigComponent)GetComponent(ConfigComponentsLookup.PlaneConfig); } }
    public bool hasPlaneConfig { get { return HasComponent(ConfigComponentsLookup.PlaneConfig); } }

    public void AddPlaneConfig(int newPlaneBornTime, UnityEngine.Vector2 newBornPos, UnityEngine.Vector2 newStartPos, float newSpeed, float newBulletspeed) {
        var index = ConfigComponentsLookup.PlaneConfig;
        var component = (PlaneConfigComponent)CreateComponent(index, typeof(PlaneConfigComponent));
        component.planeBornTime = newPlaneBornTime;
        component.bornPos = newBornPos;
        component.startPos = newStartPos;
        component.speed = newSpeed;
        component.bulletspeed = newBulletspeed;
        AddComponent(index, component);
    }

    public void ReplacePlaneConfig(int newPlaneBornTime, UnityEngine.Vector2 newBornPos, UnityEngine.Vector2 newStartPos, float newSpeed, float newBulletspeed) {
        var index = ConfigComponentsLookup.PlaneConfig;
        var component = (PlaneConfigComponent)CreateComponent(index, typeof(PlaneConfigComponent));
        component.planeBornTime = newPlaneBornTime;
        component.bornPos = newBornPos;
        component.startPos = newStartPos;
        component.speed = newSpeed;
        component.bulletspeed = newBulletspeed;
        ReplaceComponent(index, component);
    }

    public void RemovePlaneConfig() {
        RemoveComponent(ConfigComponentsLookup.PlaneConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherPlaneConfig;

    public static Entitas.IMatcher<ConfigEntity> PlaneConfig {
        get {
            if (_matcherPlaneConfig == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.PlaneConfig);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherPlaneConfig = matcher;
            }

            return _matcherPlaneConfig;
        }
    }
}
