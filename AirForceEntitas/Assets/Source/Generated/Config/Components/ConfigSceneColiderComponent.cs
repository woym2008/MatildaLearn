//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity sceneColiderEntity { get { return GetGroup(ConfigMatcher.SceneColider).GetSingleEntity(); } }
    public SceneColiderComponent sceneColider { get { return sceneColiderEntity.sceneColider; } }
    public bool hasSceneColider { get { return sceneColiderEntity != null; } }

    public ConfigEntity SetSceneColider(UnityEngine.Vector2 newLu, UnityEngine.Vector2 newRd) {
        if (hasSceneColider) {
            throw new Entitas.EntitasException("Could not set SceneColider!\n" + this + " already has an entity with SceneColiderComponent!",
                "You should check if the context already has a sceneColiderEntity before setting it or use context.ReplaceSceneColider().");
        }
        var entity = CreateEntity();
        entity.AddSceneColider(newLu, newRd);
        return entity;
    }

    public void ReplaceSceneColider(UnityEngine.Vector2 newLu, UnityEngine.Vector2 newRd) {
        var entity = sceneColiderEntity;
        if (entity == null) {
            entity = SetSceneColider(newLu, newRd);
        } else {
            entity.ReplaceSceneColider(newLu, newRd);
        }
    }

    public void RemoveSceneColider() {
        sceneColiderEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public SceneColiderComponent sceneColider { get { return (SceneColiderComponent)GetComponent(ConfigComponentsLookup.SceneColider); } }
    public bool hasSceneColider { get { return HasComponent(ConfigComponentsLookup.SceneColider); } }

    public void AddSceneColider(UnityEngine.Vector2 newLu, UnityEngine.Vector2 newRd) {
        var index = ConfigComponentsLookup.SceneColider;
        var component = (SceneColiderComponent)CreateComponent(index, typeof(SceneColiderComponent));
        component.lu = newLu;
        component.rd = newRd;
        AddComponent(index, component);
    }

    public void ReplaceSceneColider(UnityEngine.Vector2 newLu, UnityEngine.Vector2 newRd) {
        var index = ConfigComponentsLookup.SceneColider;
        var component = (SceneColiderComponent)CreateComponent(index, typeof(SceneColiderComponent));
        component.lu = newLu;
        component.rd = newRd;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneColider() {
        RemoveComponent(ConfigComponentsLookup.SceneColider);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherSceneColider;

    public static Entitas.IMatcher<ConfigEntity> SceneColider {
        get {
            if (_matcherSceneColider == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.SceneColider);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherSceneColider = matcher;
            }

            return _matcherSceneColider;
        }
    }
}
